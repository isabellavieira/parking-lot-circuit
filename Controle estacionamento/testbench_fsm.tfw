////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2003 Xilinx, Inc.
// All Right Reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 8.2i
//  \   \         Application : ISE
//  /   /         Filename : testbench_fsm.tfw
// /___/   /\     Timestamp : Wed Dec 07 11:13:59 2011
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: 
//Design Name: testbench_fsm
//Device: Xilinx
//
`timescale 1ns/1ps

module testbench_fsm;
    reg A = 1'b0;
    reg B = 1'b0;
    reg CLK = 1'b0;
    reg reset = 1'b0;
    wire contar;
    wire up_down;

    parameter PERIOD = 200;
    parameter real DUTY_CYCLE = 0.5;
    parameter OFFSET = 0;

    initial    // Clock process for CLK
    begin
        #OFFSET;
        forever
        begin
            CLK = 1'b0;
            #(PERIOD-(PERIOD*DUTY_CYCLE)) CLK = 1'b1;
            #(PERIOD*DUTY_CYCLE);
        end
    end

    Maquina_de_estados UUT (
        .A(A),
        .B(B),
        .CLK(CLK),
        .reset(reset),
        .contar(contar),
        .up_down(up_down));

    integer TX_FILE = 0;
    integer TX_ERROR = 0;
    
    initial begin  // Open the results file...
        TX_FILE = $fopen("results.txt");
        #10200 // Final time:  10200 ns
        if (TX_ERROR == 0) begin
            $display("No errors or warnings.");
            $fdisplay(TX_FILE, "No errors or warnings.");
        end else begin
            $display("%d errors found in simulation.", TX_ERROR);
            $fdisplay(TX_FILE, "%d errors found in simulation.", TX_ERROR);
        end
        $fclose(TX_FILE);
        $stop;
    end

    initial begin
        // -------------  Current Time:  285ns
        #285;
        A = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  485ns
        #200;
        B = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  885ns
        #400;
        A = 1'b0;
        // -------------------------------------
        // -------------  Current Time:  1085ns
        #200;
        B = 1'b0;
        // -------------------------------------
        // -------------  Current Time:  1115ns
        #30;
        CHECK_contar(1'b1);
        // -------------------------------------
        // -------------  Current Time:  1315ns
        #200;
        CHECK_contar(1'b0);
        // -------------------------------------
        // -------------  Current Time:  1685ns
        #370;
        B = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  1885ns
        #200;
        A = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  2285ns
        #400;
        B = 1'b0;
        // -------------------------------------
        // -------------  Current Time:  2485ns
        #200;
        A = 1'b0;
        // -------------------------------------
        // -------------  Current Time:  2515ns
        #30;
        CHECK_contar(1'b1);
        CHECK_up_down(1'b1);
        // -------------------------------------
        // -------------  Current Time:  2715ns
        #200;
        CHECK_contar(1'b0);
        CHECK_up_down(1'b0);
        // -------------------------------------
        // -------------  Current Time:  3085ns
        #370;
        A = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  3485ns
        #400;
        A = 1'b0;
        // -------------------------------------
    end

    task CHECK_contar;
        input NEXT_contar;

        #0 begin
            if (NEXT_contar !== contar) begin
                $display("Error at time=%dns contar=%b, expected=%b", $time, contar, NEXT_contar);
                $fdisplay(TX_FILE, "Error at time=%dns contar=%b, expected=%b", $time, contar, NEXT_contar);
                $fflush(TX_FILE);
                TX_ERROR = TX_ERROR + 1;
            end
        end
    endtask
    task CHECK_up_down;
        input NEXT_up_down;

        #0 begin
            if (NEXT_up_down !== up_down) begin
                $display("Error at time=%dns up_down=%b, expected=%b", $time, up_down, NEXT_up_down);
                $fdisplay(TX_FILE, "Error at time=%dns up_down=%b, expected=%b", $time, up_down, NEXT_up_down);
                $fflush(TX_FILE);
                TX_ERROR = TX_ERROR + 1;
            end
        end
    endtask

endmodule

